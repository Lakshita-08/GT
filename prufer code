#include<bits/stdc++.h>
using namespace std;
bool nextPrufer(int * prufer,int n){
    bool ok = false;
    int i=0;
    for(i=n-2;i>=0;i--){
        if(prufer[i]<n){
            prufer[i]++;
            break;
        }
    }
    if(i==-1){
        return false;
    }
    i++;
    while(i<n-2){
        prufer[i] = 1;
        i++;
    }
    return true;
}
int main(){
    int n;
    cin>>n;
    int prufer[n-2];
    for(int i=0;i<n-2;i++) prufer[i] = 1;
    do{
        cout<<"Prufer Code of the tree:- "<<endl;
        int pruferPresent[n+1],treePresent[n+1];
        for(int i=1;i<=n;i++) pruferPresent[i]=0,treePresent[i]=0;
        for(int i=0;i<n-2;i++) pruferPresent[prufer[i]]++,cout<<prufer[i]<<" ";
        cout<<endl;
        cout<<"Edges of the Spanning Tree:- "<<endl;
        for(int i=0;i<n-2;i++){
            for(int j=1;j<=n;j++){
                if(!pruferPresent[j]&&!treePresent[j]){
                    cout<<"{"<<prufer[i]<<","<<j<<"}"<<endl;
                    treePresent[j]++;
                    break;
                }
            }
            pruferPresent[prufer[i]]--;
        }
        int a=-1,b=-1;
        for(int i=1;i<=n;i++){
            if(treePresent[i]==0){
                if(a==-1) a = i;
                else b = i;
            }
        }
        cout<<"{"<<a<<","<<b<<"}"<<endl;
    }
    while(nextPrufer(prufer,n));
    return 0;
}
